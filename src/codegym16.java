// 经典的类
// 程序由各种类型的对象（类）组成。
// 如果我们将程序看作一个整体，那么组成它的构造块就是对象。类是构造块的类型。换句话说，不同类型的构造块是不同类的对象。
// 需要新的对象类型时，我们将创建一个新类并定义其内部对象的行为方式。
// 类由执行某些操作的方法及其用于存储数据的变量组成。

/*
“简单点说，类就是一组方法，对吗？”
“差不多。更确切地说，类是一组相关方法和这些方法用来存储不同值的共享变量。”
“我明白了。要创建新类，我们首先需要编写这些方法…”
“是的。此外，我们还需要确定不同方法将共享哪些变量。我们将这些变量从方法中拉出来并放入类中，即，将局部变量转换为成员（实例）变量。”
类基本上是按以下流程创建的：
1.程序员确定需要哪些其他对象。
2.程序员根据对象要执行的操作将其分为不同的类型。
3.程序员为每种类型编写单独的类。
4.在类中，程序员声明所需的方法和变量。
5.在每种方法中，程序员编写命令以使该方法执行所需的操作。
6.类已完成。现在你可以创建该类的对象。”
 */

// 要创建对象，请在代码中写入‘new class_name()’。下面是一些示例"
// Cat cat = new Cat();
// Reader reader = new BufferedReader(new InputStreamReader(System.in));
// InputStream is = new FileInputStream(path);

// 对象的两个属性：
// 第一个属性。每个对象都存储自己的实例变量副本。这意味着，如果在一个类中声明了实例变量 x 和 y，并创建了该类的 10 个对象，则每个对象都有自己的变量。更改一个对象中的变量不会影响其他对象中的变量。
// 第二个属性。创建对象时，你可以传递不同的参数。这些值用于初始化对象。这有点像给新生儿起名字。许多类都需要这些参数来创建类的实例（对象）。

// 实例变量：每个对象都有自己的数据，这些数据就是实例变量：
/*
Cat cat1 = new Cat();
cat1.name = "奥斯卡";

Cat cat2 = new Cat();
cat2.name = "Smudge";

System.out.println(cat1.name);
System.out.println(cat2.name);
 */